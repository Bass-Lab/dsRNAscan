name: Build einverted binaries

on:
  push:
    branches: [ main ]
    paths:
      - 'einverted.patch'
      - '.github/workflows/build-binaries.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: x86_64
            platform: linux/amd64
          - arch: aarch64
            platform: linux/arm64
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up QEMU for arm64
      if: matrix.arch == 'aarch64'
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64
    
    - name: Download EMBOSS source
      run: |
        wget -q https://github.com/EMBOSS/EMBOSS/archive/refs/tags/rel-6-6-0.tar.gz -O EMBOSS-6.6.0.tar.gz
        tar -xzf EMBOSS-6.6.0.tar.gz
        mv EMBOSS-rel-6-6-0 EMBOSS-6.6.0
    
    - name: Build einverted (native x86_64)
      if: matrix.arch == 'x86_64'
      run: |
        mkdir -p dsrnascan/tools
        cd EMBOSS-6.6.0
        patch -p1 < ../einverted.patch
        ./configure --prefix=$PWD/../build --without-x --without-pngdriver
        make -j$(nproc)
        cd emboss
        make einverted
        cp .libs/einverted ../../dsrnascan/tools/einverted_linux_x86_64
        
    - name: Build einverted (arm64 via Docker)
      if: matrix.arch == 'aarch64'
      run: |
        docker run --rm --platform ${{ matrix.platform }} \
          -v $PWD:/workspace \
          -w /workspace \
          ubuntu:22.04 bash -c "
            apt-get update && \
            apt-get install -y build-essential patch && \
            cd EMBOSS-6.6.0 && \
            patch -p1 < ../einverted.patch && \
            ./configure --prefix=/usr/local --without-x --without-pngdriver && \
            make -j\$(nproc) && \
            cd emboss && \
            make einverted && \
            cp .libs/einverted ../dsrnascan/tools/einverted_linux_aarch64
          "
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: einverted-linux-${{ matrix.arch }}
        path: dsrnascan/tools/einverted_linux_*

  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13  # Intel Mac
            arch: x86_64
            binary_name: einverted_darwin_x86_64
          - os: macos-14  # Apple Silicon Mac
            arch: arm64
            binary_name: einverted_darwin_arm64
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download EMBOSS source
      run: |
        curl -L https://github.com/EMBOSS/EMBOSS/archive/refs/tags/rel-6-6-0.tar.gz -o EMBOSS-6.6.0.tar.gz
        tar -xzf EMBOSS-6.6.0.tar.gz
        mv EMBOSS-rel-6-6-0 EMBOSS-6.6.0
    
    - name: Build einverted
      run: |
        cd EMBOSS-6.6.0
        patch -p1 < ../einverted.patch
        ./configure --prefix=$PWD/../build --without-x --without-pngdriver
        make -j$(sysctl -n hw.ncpu)
        cd emboss
        make einverted
        cp .libs/einverted ../../dsrnascan/tools/${{ matrix.binary_name }}
        
    - name: Verify binary
      run: |
        file dsrnascan/tools/${{ matrix.binary_name }}
        dsrnascan/tools/${{ matrix.binary_name }} -help | head -5
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: einverted-macos-${{ matrix.arch }}
        path: dsrnascan/tools/${{ matrix.binary_name }}

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-make
          patch
          wget
          tar
    
    - name: Build einverted
      shell: msys2 {0}
      run: |
        wget -q https://github.com/EMBOSS/EMBOSS/archive/refs/tags/rel-6-6-0.tar.gz -O EMBOSS-6.6.0.tar.gz
        tar -xzf EMBOSS-6.6.0.tar.gz
        mv EMBOSS-rel-6-6-0 EMBOSS-6.6.0
        cd EMBOSS-6.6.0
        patch -p1 < ../einverted.patch
        ./configure --prefix=$PWD/../build --without-x --without-pngdriver
        make -j$(nproc)
        cd emboss
        make einverted
        cp einverted.exe ../../dsrnascan/tools/einverted_windows_x86_64.exe
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: einverted-windows-x86_64
        path: dsrnascan/tools/einverted_windows_x86_64.exe

  collect-binaries:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    
    - name: Organize binaries
      run: |
        mkdir -p dsrnascan/tools
        find artifacts -type f -name "einverted*" -exec cp {} dsrnascan/tools/ \;
        ls -la dsrnascan/tools/
        
    - name: Create release archive
      run: |
        tar -czf einverted-binaries-all-platforms.tar.gz dsrnascan/tools/einverted*
        
    - name: Upload combined artifact
      uses: actions/upload-artifact@v3
      with:
        name: einverted-all-platforms
        path: |
          einverted-binaries-all-platforms.tar.gz
          dsrnascan/tools/

  test-binaries:
    needs: collect-binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download binaries
      uses: actions/download-artifact@v3
      with:
        name: einverted-all-platforms
        path: .
    
    - name: Test binary (Linux)
      if: runner.os == 'Linux'
      run: |
        chmod +x dsrnascan/tools/einverted_linux_x86_64
        dsrnascan/tools/einverted_linux_x86_64 -help | head -5
        
    - name: Test binary (macOS)
      if: runner.os == 'macOS'
      run: |
        ARCH=$(uname -m)
        if [ "$ARCH" = "arm64" ]; then
          BINARY="einverted_darwin_arm64"
        else
          BINARY="einverted_darwin_x86_64"
        fi
        chmod +x dsrnascan/tools/$BINARY
        dsrnascan/tools/$BINARY -help | head -5
        
    - name: Test binary (Windows)
      if: runner.os == 'Windows'
      run: |
        dsrnascan/tools/einverted_windows_x86_64.exe -help | Select-Object -First 5