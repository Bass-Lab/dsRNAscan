name: Quick Install Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  quick-install:
    name: Quick Install - ${{ matrix.os }} - Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel
    
    - name: Build einverted from EMBOSS (Unix)
      if: runner.os != 'Windows'
      run: |
        echo "Compiling einverted with G-U wobble patch..."
        chmod +x compile_patched_einverted.sh
        ./compile_patched_einverted.sh
        
        # Verify it was created
        if [ -f "dsrnascan/tools/einverted" ]; then
            echo "✓ einverted binary created"
            echo "Binary size: $(ls -lh dsrnascan/tools/einverted | awk '{print $5}')"
        else
            echo "ERROR: einverted binary not created!"
            exit 1
        fi
    
    - name: Build einverted (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        # Create tools directory
        mkdir -p dsrnascan/tools
        
        # For Windows, create a placeholder that tells users to use WSL/Docker
        echo '#!/bin/bash' > dsrnascan/tools/einverted.exe
        echo 'echo "einverted not available on Windows - use WSL or Docker"' >> dsrnascan/tools/einverted.exe
        echo 'exit 1' >> dsrnascan/tools/einverted.exe
        chmod +x dsrnascan/tools/einverted.exe
    
    - name: Install package
      run: |
        # Do a proper package install (not editable mode)
        pip install .
        
        # Show where dsrnascan got installed
        echo "Package installed to:"
        pip show dsrnascan | grep Location
    
    - name: Run built-in G-U wobble test
      run: |
        echo "Testing dsrnascan with built-in G-U wobble verification..."
        dsrnascan --version
        echo ""
        echo "The test passes if you see '✓ G-U wobble support confirmed' above"
    
    - name: Verify test results (Unix only)
      if: runner.os != 'Windows'
      run: |
        # The built-in test creates a directory dsrnascan_* with results
        if ls -d dsrnascan_* 2>/dev/null; then
            echo "✓ Test output directory found"
            # Check if results were created
            if ls dsrnascan_*/*_merged_results.txt 2>/dev/null; then
                echo "✓ Results file found"
                result_count=$(tail -n +2 dsrnascan_*/*_merged_results.txt | wc -l)
                if [ "$result_count" -gt 0 ]; then
                    echo "✓ Found $result_count dsRNA structures"
                    echo "TEST PASSED!"
                else
                    echo "ERROR: No dsRNA structures found"
                    exit 1
                fi
            else
                echo "ERROR: No results file created"
                exit 1
            fi
        else
            echo "ERROR: No output directory created"
            exit 1
        fi